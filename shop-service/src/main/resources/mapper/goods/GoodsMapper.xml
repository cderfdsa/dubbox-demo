<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.cyf.shop.goods.bean.Goods">
	<sql id="table"> goods </sql>

	<!-- 用于返回的bean对象 -->
	<resultMap id="beanMap" type="com.cyf.shop.goods.bean.Goods">
		<result column="id" property="id" jdbcType="BIGINT"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="price" property="price" jdbcType="DECIMAL"/>
		<result column="status" property="status" jdbcType="TINYINT"/>
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="fields">
		`id`,
		`name`,
		`price`,
		`status`,
		`create_time`,
		`update_time`
	</sql>
	
	<!-- 多条件精确查询的条件 -->
	<sql id="exactWhere">
		<where>
			<if test="id != null">
				AND `id` = #{id,jdbcType=BIGINT}
			</if>
			<if test="name != null and name != ''">
				AND `name` LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
			</if>
			<if test="status != null">
				AND `status` = #{status,jdbcType=TINYINT}
			</if>
		</where>
	</sql>

	<!-- 多条件范围查询的条件(如：IN LIKE BETWEEN 大于 小于 等查询) -->
	<sql id="rangeWhere">
		<where>
			<if test="idList != null and idList.size() > 0">
				AND `id` IN <foreach collection="idList" item="item" index="index" open="(" separator="," close=")">#{item,jdbcType=BIGINT}</foreach>
			</if>
			<if test="name != null and name != ''">
				AND `name` LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
			</if>
			<if test="priceList != null and priceList.size() > 0">
				AND `price` IN <foreach collection="priceList" item="item" index="index" open="(" separator="," close=")">#{item,jdbcType=DECIMAL}</foreach>
			</if>
			<if test="statusList != null and statusList.size() > 0">
				AND `status` IN <foreach collection="statusList" item="item" index="index" open="(" separator="," close=")">#{item,jdbcType=TINYINT}</foreach>
			</if>
			<if test="createTimeStart != null">
				AND `create_time` &gt;= #{createTimeStart,jdbcType=TIMESTAMP}
			</if>
			<if test="createTimeEnd != null">
				AND `create_time` &lt; #{createTimeEnd,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTimeStart != null">
				AND `update_time` &gt;= #{updateTimeStart,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTimeEnd != null">
				AND `update_time` &lt; #{updateTimeEnd,jdbcType=TIMESTAMP}
			</if>
		</where>
	</sql>

	<!-- 插入记录 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO <include refid="table" /> (
        	`id` ,
        	`name` ,
        	`price` ,
        	`status` ,
        	`create_time` ,
        	`update_time` 
        ) VALUES (
        	#{id,jdbcType=BIGINT} ,
        	#{name,jdbcType=VARCHAR} ,
        	#{price,jdbcType=DECIMAL} ,
        	#{status,jdbcType=TINYINT} ,
        	#{createTime,jdbcType=TIMESTAMP} ,
        	#{updateTime,jdbcType=TIMESTAMP} 
        )
	</insert>

	<!-- 批量插入记录 -->
	<insert id="insertList" useGeneratedKeys="true" keyProperty="id" parameterType="List">
		INSERT INTO <include refid="table" /> (
        	`id` ,
        	`name` ,
        	`price` ,
        	`status` ,
        	`create_time` ,
        	`update_time` 
        ) VALUES 
		<foreach collection="list" item="item" separator=",">
			(
			#{item.id,jdbcType=BIGINT},
			#{item.name,jdbcType=VARCHAR},
			#{item.price,jdbcType=DECIMAL},
			#{item.status,jdbcType=TINYINT},
			#{item.createTime,jdbcType=TIMESTAMP},
			#{item.updateTime,jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>

	<!--动态删除-->
	 <delete id="deleteBy">
        DELETE FROM <include refid="table" /> <include refid="exactWhere"/>  
    </delete>
    
	<!--更新-->
	<update id="update" >
        UPDATE <include refid="table" /> SET
			`name` = #{name,jdbcType=VARCHAR},
			`price` = #{price,jdbcType=DECIMAL},
			`status` = #{status,jdbcType=TINYINT},
			`create_time` = #{createTime,jdbcType=TIMESTAMP},
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}
         WHERE id = #{id,jdbcType=BIGINT}
	</update>

	<!-- 按需更新 -->
	<update id="updateIfNotNull">
		UPDATE <include refid="table" />
		<set>
			<if test="name != null">
				`name`=#{name,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				`price`=#{price,jdbcType=DECIMAL},
			</if>
			<if test="status != null">
				`status`=#{status,jdbcType=TINYINT},
			</if>
			<if test="createTime != null">
				`create_time`=#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				`update_time`=#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		WHERE `id` = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 批量更新 -->
	<update id="updateList" parameterType="java.util.List">
        UPDATE <include refid="table" /> SET
			`name` = 
			<foreach collection="list" item="item" index="index" open="case id" separator=" " close="end">
				when #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
			</foreach>
			,
			`price` = 
			<foreach collection="list" item="item" index="index" open="case id" separator=" " close="end">
				when #{item.id,jdbcType=BIGINT} then #{item.price,jdbcType=DECIMAL}
			</foreach>
			,
			`status` = 
			<foreach collection="list" item="item" index="index" open="case id" separator=" " close="end">
				when #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=TINYINT}
			</foreach>
			,
			`create_time` = 
			<foreach collection="list" item="item" index="index" open="case id" separator=" " close="end">
				when #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
			</foreach>
			,
			`update_time` = 
			<foreach collection="list" item="item" index="index" open="case id" separator=" " close="end">
				when #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
			</foreach>
			
		WHERE `id` IN <foreach collection="list" item="item" index="index" open="(" separator="," close=")">#{item.id,jdbcType=BIGINT}</foreach>
	</update>

	<!-- 多条件精确查询时计算总记录数 -->
    <select id="countByExact" resultType="int">
        SELECT count(*) FROM <include refid="table" /> 
		<include refid="exactWhere"/>
    </select>

	<!-- 多条件精确查询 -->
    <select id="listByExact" resultMap="beanMap">
    	SELECT <include refid="fields" />
	    FROM <include refid="table" /> 
		<include refid="exactWhere"/>
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
    </select>

	<!-- 多条件范围查询时计算总记录数 -->
	<select id="countByRange" resultType="int">
        SELECT COUNT(*) FROM <include refid="table" /> 
		<include refid="rangeWhere"/>    
    </select>
	
	<!-- 多条件范围查询 -->
	<select id="listByRange" resultMap="beanMap">
		SELECT <include refid="fields" /> 
		FROM <include refid="table" />
		<include refid="rangeWhere"/>
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
	</select>
	
	<!-- 取得所有记录，只在表数据量少时使用 -->
    <select id="listAll" resultMap="beanMap">
    	SELECT <include refid="fields" />
	    FROM <include refid="table" /> 
		<if test="sortColumns != null">
			ORDER BY ${sortColumns}
		</if>
    </select>

	<!-- 多条件精确查询，然后由mybatis转成Map之后返回，key字段在调用时指定 -->
    <select id="mapByExact" resultMap="beanMap">
    	SELECT <include refid="fields" />
	    FROM <include refid="table" /> 
		<include refid="exactWhere"/>
    </select>

	<!-- 多条件范围查询，然后由mybatis转成Map之后返回，key字段在调用时指定 -->
    <select id="mapByRange" resultMap="beanMap">
    	SELECT <include refid="fields" />
	    FROM <include refid="table" /> 
		<include refid="rangeWhere"/>
    </select>

	<!-- 根据唯一键查询(如果有的话) -->



	<!--按id主键删除-->
	<delete id="deleteById">
        DELETE FROM <include refid="table" /> WHERE id = #{id,jdbcType=BIGINT}
    </delete>

	<!--按多个id主键删除-->
	<delete id="deleteByIdList">
        DELETE FROM <include refid="table" /> 
		WHERE id in <foreach collection="list" item="item" index="index" open="(" separator="," close=")">#{item,jdbcType=BIGINT}</foreach>
    </delete>
    
	<!-- 根据id查询 -->
    <select id="getById" resultMap="beanMap">
		SELECT <include refid="fields" /> 
		FROM <include refid="table" /> 
		WHERE id = #{id,jdbcType=BIGINT}  
	</select>

	<!-- 根据多个id批量查询 -->
	<select id="listByIdList" resultMap="beanMap">
		SELECT <include refid="fields" /> 
		FROM <include refid="table" /> 
		WHERE id in 
		<foreach collection="list" item="item" index="index" open="(" separator="," close=")">#{item,jdbcType=BIGINT}</foreach>
	</select>

	<!-- 多条件精确查询，然后由mybatis转成以id为key的Map之后返回 -->
    <select id="mapByIdExact" resultMap="beanMap">
    	SELECT <include refid="fields" />
	    FROM <include refid="table" /> 
		<include refid="exactWhere"/>
    </select>

	<!-- 多条件范围查询，然后由mybatis转成以id为key的Map之后返回 -->
	<select id="mapByIdRange" resultMap="beanMap">
		SELECT <include refid="fields" /> 
		FROM <include refid="table" />
		<include refid="rangeWhere"/>
	</select>
	
</mapper>

